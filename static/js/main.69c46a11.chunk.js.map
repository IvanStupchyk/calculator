{"version":3,"sources":["components/Input-panel/Btn/Btn.module.css","components/Board/Board.module.css","App.tsx","components/Calculator-border.module.css","components/Input-panel/Input-panel.module.css","components/Board/Board.tsx","components/Input-panel/Btn/Btn.tsx","components/Input-panel/Input-panel.tsx","components/Calculator-border.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","App","useState","intermediateValue","setIntermediateValue","resultValue","setResultValue","getItemButton","value","lastElement","length","checkConditions","fractionalPartLength","eval","Math","trunc","toString","toFixed","prev","substring","className","Board","props","s","board_container","intermediate_data","result","toLocaleString","Btn","onClick","BtnContent","btn_container","btnZero","btn_zero","btnEqually","btn_equally","btnsArithmetic","btn_arithmetic","btnsEraser","btn_eraser","InputPanel","btnProperty","btnContent","btnOne","btnTwo","btnThree","btnFour","btnFive","btnSix","btnSeven","btnEight","btnNine","btnDot","btnPlus","btnMinus","btnMultiply","btnSplit","btnPercentage","btnDischarge","btnChangeSign","panel_container","CalculatorBorder","calculator_container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69c46a11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_container\":\"Btn_btn_container__3lh6F\",\"btn_zero\":\"Btn_btn_zero__Mn535\",\"btn_equally\":\"Btn_btn_equally__3EKet\",\"btn_arithmetic\":\"Btn_btn_arithmetic__1NjCm\",\"btn_eraser\":\"Btn_btn_eraser__2BSPI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board_container\":\"Board_board_container__31lc4\",\"result\":\"Board_result__2sJAW\",\"intermediate_data\":\"Board_intermediate_data__2LRmX\"};","import React, {useState} from 'react';\nimport './App.css';\nimport CalculatorBorder from \"./components/Calculator-border\";\n\nfunction App() {\n    const [intermediateValue, setIntermediateValue] = useState('')\n    const [resultValue, setResultValue] = useState<number>(0)\n\n    const getItemButton = (value: string) => {\n        const lastElement = intermediateValue[intermediateValue.length - 1]\n        const checkConditions = lastElement === '-' || lastElement === '+' || lastElement === '*' || lastElement === '/' || lastElement === '.' || intermediateValue.length === 0\n\n        switch (value) {\n            case 'C':\n                setIntermediateValue('')\n                setResultValue(0)\n                break\n            case '=':\n                if (!checkConditions) {\n                    const fractionalPartLength = (eval(intermediateValue) - Math.trunc(eval(intermediateValue))).toString().length\n\n                    fractionalPartLength > 4\n                        ? setResultValue(eval(intermediateValue).toFixed(4))\n                        : setResultValue(eval(intermediateValue))\n                }\n                break\n            case '0':\n                intermediateValue.length && intermediateValue[intermediateValue.length - 1] !== ')' && intermediateValue.length < 17 &&\n                setIntermediateValue(prev => prev + value)\n                break\n            case '+':\n                checkConditions || setIntermediateValue(prev => prev + value)\n                break\n            case '-':\n                checkConditions || setIntermediateValue(prev => prev + value)\n                break\n            case '*':\n                checkConditions || setIntermediateValue(prev => prev + value)\n                break\n            case '/':\n                checkConditions || setIntermediateValue(prev => prev + value)\n                break\n            case '.':\n                checkConditions || setIntermediateValue(prev => prev + value)\n                break\n            case '<':\n                intermediateValue[intermediateValue.length - 1] === ')' &&\n                setIntermediateValue(prev => prev.substring(1, intermediateValue.length - 1))\n\n                setIntermediateValue(prev => prev.substring(0, intermediateValue.length - 1))\n                break\n            case '()':\n                lastElement === ')' || checkConditions ||\n                setIntermediateValue(prev => `(${prev})`)\n                break\n            default:\n                intermediateValue[intermediateValue.length - 1] !== ')' && intermediateValue.length < 17 &&\n                setIntermediateValue(prev => prev + value)\n\n                break\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <CalculatorBorder resultValue={resultValue}\n                              intermediateValue={intermediateValue}\n                              getItemButton={getItemButton}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calculator_container\":\"Calculator-border_calculator_container__22h1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel_container\":\"Input-panel_panel_container__zdDuW\"};","import React from \"react\";\r\nimport s from './Board.module.css';\r\n\r\ntype BoardTypeProps = {\r\n    intermediateValue: string\r\n    resultValue: number\r\n}\r\n\r\nfunction Board(props: BoardTypeProps) {\r\n    return (\r\n        <div className={s.board_container}>\r\n            <p className={s.intermediate_data}>{props.intermediateValue}</p>\r\n            <p className={s.result}>{props.resultValue.toLocaleString()}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import React from \"react\";\r\nimport s from './Btn.module.css';\r\n\r\ntype BtnPropsType = {\r\n    btnZero?: boolean\r\n    btnEqually?: boolean\r\n    btnsEraser?: boolean\r\n    btnsArithmetic?: boolean\r\n    BtnContent: string\r\n    getItemButton?: (value: string) => void\r\n}\r\n\r\nfunction Btn(props: BtnPropsType) {\r\n\r\n    const typeBtn = () => {\r\n        if (props.btnZero) {\r\n            return s.btn_zero\r\n        } else if (props.btnEqually) {\r\n            return s.btn_equally\r\n        } else if (props.btnsArithmetic) {\r\n            return s.btn_arithmetic\r\n        } else if (props.btnsEraser) {\r\n            return s.btn_eraser\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    const sendValue = () => {\r\n        props.getItemButton && props.getItemButton(props.BtnContent)\r\n    }\r\n\r\n    return (\r\n        <a onClick={sendValue}\r\n           className={`${s.btn_container} ${typeBtn()}`}\r\n        >\r\n            {props.BtnContent}\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default Btn;","import React from 'react';\r\nimport s from './Input-panel.module.css';\r\nimport Btn from \"./Btn/Btn\";\r\n\r\ntype InputPanelTypeProps = {\r\n    getItemButton: (value: string) => void\r\n}\r\n\r\nfunction InputPanel(props: InputPanelTypeProps) {\r\n    const btnProperty = {\r\n        btnZero: true,\r\n        btnEqually: true,\r\n        btnsEraser: true,\r\n        btnsArithmetic: true\r\n    }\r\n\r\n    const btnContent = {\r\n        'numeral': {\r\n            btnZero: '0',\r\n            btnOne: '1',\r\n            btnTwo: '2',\r\n            btnThree: '3',\r\n            btnFour: '4',\r\n            btnFive: '5',\r\n            btnSix: '6',\r\n            btnSeven: '7',\r\n            btnEight: '8',\r\n            btnNine: '9',\r\n            btnDot: '.'\r\n        },\r\n        'sign': {\r\n            btnPlus: '+',\r\n            btnMinus: '-',\r\n            btnMultiply: '*',\r\n            btnSplit: '/',\r\n            btnEqually: '=',\r\n            btnPercentage: '()',\r\n            btnDischarge: 'C',\r\n            btnChangeSign: '<'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.panel_container}>\r\n            <Btn getItemButton={props.getItemButton}\r\n                 btnsEraser={btnProperty.btnsEraser}\r\n                 BtnContent={btnContent['sign'].btnDischarge}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 btnsEraser={btnProperty.btnsEraser}\r\n                 BtnContent={btnContent['sign'].btnChangeSign}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 btnsEraser={btnProperty.btnsEraser}\r\n                 BtnContent={btnContent['sign'].btnPercentage}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 btnsArithmetic={btnProperty.btnsArithmetic}\r\n                 BtnContent={btnContent['sign'].btnSplit}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 BtnContent={btnContent['numeral'].btnSeven}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 BtnContent={btnContent['numeral'].btnEight}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 BtnContent={btnContent['numeral'].btnNine}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 btnsArithmetic={btnProperty.btnsArithmetic}\r\n                 BtnContent={btnContent['sign'].btnMultiply}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 BtnContent={btnContent['numeral'].btnFour}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 BtnContent={btnContent['numeral'].btnFive}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 BtnContent={btnContent['numeral'].btnSix}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 btnsArithmetic={btnProperty.btnsArithmetic}\r\n                 BtnContent={btnContent['sign'].btnMinus}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 BtnContent={btnContent['numeral'].btnOne}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 BtnContent={btnContent['numeral'].btnTwo}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 BtnContent={btnContent['numeral'].btnThree}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 btnsArithmetic={btnProperty.btnsArithmetic}\r\n                 BtnContent={btnContent['sign'].btnPlus}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 btnZero={btnProperty.btnZero}\r\n                 BtnContent={btnContent['numeral'].btnZero}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 BtnContent={btnContent['numeral'].btnDot}\r\n            />\r\n            <Btn getItemButton={props.getItemButton}\r\n                 btnEqually={btnProperty.btnEqually}\r\n                 BtnContent={btnContent['sign'].btnEqually}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputPanel;","import React from 'react';\nimport s from './Calculator-border.module.css';\nimport Board from \"./Board/Board\";\nimport InputPanel from \"./Input-panel/Input-panel\";\n\ntype InputPanelTypeProps = {\n    getItemButton: (value: string) => void\n    intermediateValue: string\n    resultValue: number\n}\n\nfunction CalculatorBorder(props: InputPanelTypeProps) {\n    return (\n        <div className={s.calculator_container}>\n            <Board resultValue={props.resultValue}\n                   intermediateValue={props.intermediateValue}\n            />\n            <InputPanel getItemButton={props.getItemButton}/>\n        </div>\n    );\n}\n\nexport default CalculatorBorder;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}